version: '3.8'

services:
  web-app:
    container_name: syntax-highlighting-service-web-app
    build: ./web-app
    image: benlegiang/syntax-highlighting-service-web-app:master
    ports:
      - $WEB_APP_HOST_PORT:3000
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.25'  
    depends_on:
      - rest-api
    networks: 
      - backend
    restart: always
  rest-api:
    container_name: syntax-highlighting-service-rest-api
    build: ./rest.api
    image: benlegiang/syntax-highlighting-service-rest-api:master
    ports:
      - $REST_API_HOST_PORT:$REST_API_HOST_PORT
    deploy:
      resources:
        limits:
          memory: 512m
          cpus: '0.25'
    depends_on:
      - annotation-api
    networks:
      - backend   
    restart: always

  annotation-api:
    build: ./annotation.api
    image: benlegiang/syntax-highlighting-service-annotation-api:master
    env_file:
      - .env
    expose:
      - "${ANNOTATION_API_HOST_PORT}"
    deploy:
      replicas: 5
      resources:
        limits:
          memory: 3G
          cpus: '1'
    depends_on:
      - mongodb
    networks:
      - backend
    restart: always

  prediction-api:
    build: ./prediction.api
    image: benlegiang/syntax-highlighting-service-prediction-api:master
    env_file:
      - .env
    expose:
      - "${PREDICTION_API_HOST_PORT}"
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - mongodb
      - training-api
    networks:
      - backend 
  training-api:
    container_name: syntax-highlighting-service-training-api
    build: ./training.api
    image: benlegiang/syntax-highlighting-service-training-api:master
    ports:
      - $TRAINING_API_HOST_PORT:$TRAINING_API_HOST_PORT
    expose:
      - "${TRAINING_API_HOST_PORT}"
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '2'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - mongodb
    networks:
      - backend
  mongodb:
    container_name: syntax-highlighting-service-mongodb
    image: mongo:latest
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$MONGO_ROOT_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD=$MONGO_ROOT_PASSWORD
      - MONGO_INITDB_DATABASE=$MONGO_DB
    volumes:
      - db-data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
      - "$MONGO_HOST_PORT:$MONGO_HOST_PORT"
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
    networks:
      - backend
    restart: unless-stopped
  nginx:
    image: nginx:latest
    container_name: syntax-highlighting-service-load-balancer
    volumes: 
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    environment:
      - NGINX_ENVSUBST_OUTPUT_DIR=/etc/nginx
    env_file:
      - .env
    depends_on:
      - annotation-api
      - prediction-api
    ports:
      - ${NGINX_HOST_PORT}:${NGINX_HOST_PORT}
    expose:
      - "${NGINX_HOST_PORT}"
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.25'
    networks:
      - backend
    restart: unless-stopped
volumes:
  db-data:
networks:
  backend:
    driver: bridge
    


